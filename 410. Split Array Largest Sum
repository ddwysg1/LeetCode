Link: https://leetcode.com/problems/split-array-largest-sum/description/
class Solution {
    public int splitArray(int[] nums, int m) {
        if (nums == null || nums.length == 0 || m <= 0) {
            return 0;
        }
        int N = nums.length;
        int[] sum = new int[N + 1];
        for (int i = 0; i < N; i++) {
            sum[i + 1] = sum[i] + nums[i];
        }
        if (m == 1) {
            return sum[N];
        }
        int[][] f = new int[N + 1][m + 1];
        for (int i = 1; i <= N; i++) {
            f[i][1] = sum[i];
        }
        for (int i = 1; i <= N; i++) {
            for (int k = 2; k <= m && k <= i; k++) {
                f[i][k] = Integer.MAX_VALUE;
                for (int j = 1; j <= i - 1; j++) {
                    f[i][k] = Math.min(Math.max(f[j][k - 1], sum[i] - sum[j]), f[i][k]); 
                }
            }
        }
        return f[N][m];
    }
}
