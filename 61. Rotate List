Link: https://leetcode.com/problems/rotate-list/description/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || k < 0) {
            return null;
        }
        ListNode measureNode = head;
        int i = 1;
        while (measureNode.next != null) {
            measureNode = measureNode.next;
            i++;
        }
        if (i == 1) {
            return head;
        } else {
            k = k % i;
            for (int j = 0; j < k; j++) {
            head = rotateOnce(head, i);
            }
        }
        return head;
    }
    private ListNode rotateOnce(ListNode head, int length) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        head = dummy;
        ListNode startNode = head.next;
        int i = 1;
        while (i < length) {
            head = head.next;
            i++;
        }
        ListNode endNode = head;
        head = head.next;
        dummy.next = head;
        head.next = startNode;
        endNode.next = null;
        return dummy.next;
    }
}
