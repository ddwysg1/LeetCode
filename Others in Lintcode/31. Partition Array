Link: https://www.lintcode.com/problem/partition-array/description
public class Solution {
    /**
     * @param nums: The integer array you should partition
     * @param k: An integer
     * @return: The index after partition
     */
    public int partitionArray(int[] nums, int k) {
        // write your code here
        if (nums == null || nums.length == 0) {
            return 0;
        }
        int len = nums.length;
        int left = 0, right = len - 1;
        while(left < right) {
            while(left < right && nums[left] < k) {
                left++;
            }
            while(left < right && nums[right] >= k) {
                right--;
            }
            if(left < right) {
                swap(nums, left, right);
                left++;
                right--; 
            }
        }
        if (nums[left] < k) {
            return left + 1;
        }
        return left;
    }
    
    private void swap(int[] nums, int pos1, int pos2) {
        int temp = nums[pos1];
        nums[pos1] = nums[pos2];
        nums[pos2] = temp;
    }
}
