Link: https://leetcode.com/problems/minimum-window-substring/description/
class Solution {
    public String minWindow(String s, String t) {
        String ans = "";
        if (s == null || s.length() == 0 || t == null || t.length() == 0) {
            return ans;
        }
        int[] stringHash = new int[256];
        int[] targetHash = new int[256];
        initializeTarget(targetHash, t);
        int length = Integer.MAX_VALUE;
        int i = 0, j = 0;
        for (i = 0; i < s.length(); i++) {
            while (j < s.length() && !isValid(stringHash, targetHash)) {
                stringHash[s.charAt(j)]++;
                j++;
            }
            if (isValid(stringHash, targetHash)) {
                if (length > j - i) {
                    length = Math.min(length, j - i);
                    ans = s.substring(i, j);
                }
            }
            stringHash[s.charAt(i)]--;
        }
        return ans;
    }
    
    private void initializeTarget(int[] target, String t) {
        char[] chars = t.toCharArray();
        for (char c : chars) {
            target[c]++;
        }
    }
    
    private boolean isValid(int[] string, int[] target) {
        for (int i = 0; i < 256; i++) {
            if (target[i] > string[i]) {
                return false;
            }
        }
        return true;
    }
}
