Link: https://leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters/description/
class Solution {
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        Map<Character, Integer> map = new HashMap<>();
        int i = 0, j = 0;
        int length = Integer.MIN_VALUE;
        for(i = 0; i < s.length(); i++) {
            while (j < s.length()) {
                char c = s.charAt(j);
                if (map.containsKey(c)) {
                    map.put(c, map.get(c) + 1);
                } else {
                    if (map.size() == 2) {
                        break;
                    }
                    map.put(c, 1);
                }
                j++;
            }
            length = Math.max(length, j - i);
            char head = s.charAt(i);
            if (map.containsKey(head)) {
                int count = map.get(head);
                if (count > 1) {
                    map.put(head, count - 1);
                } else {
                    map.remove(head);
                }
            }
        }
        return length;
    }
}
