Link: https://leetcode.com/problems/find-all-anagrams-in-a-string/description/
class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        List<Integer> result = new ArrayList<>();
        if (s == null || s.length() < p.length()) {
            return result;
        }
        int[] scan = new int[128];
        int[] target = new int[128];
        for (int i = 0; i < p.length(); i++) {
            target[p.charAt(i)] += 1;
            scan[s.charAt(i)] += 1;
        }
        if (s.length() == p.length()) {
            if (isAnagram(scan, target)) {
                result.add(0);
            }
        } else if (s.length() > p.length()) {
            for (int j = p.length(); j < s.length(); j++) {
            if (isAnagram(scan, target)) {
                result.add(j - p.length());
                }
            scan[s.charAt(j - p.length())] -= 1;
            scan[s.charAt(j)] += 1;
            }
            if (isAnagram(scan, target)) {
                result.add(s.length() - p.length());
            }
        }
        return result;
    }
    
    private boolean isAnagram(int[] scan, int[] target) {
        for (int i = 97; i < 128; i++) {
            if (scan[i] != target[i]) {
                return false;
            }
        }
        return true;
    }
}
