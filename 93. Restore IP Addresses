Link: https://leetcode.com/problems/restore-ip-addresses/description/
class Solution {
    public List<String> restoreIpAddresses(String s) {
        List<String> result = new ArrayList<>();
        if (s.length() < 4 || s.length() > 12) {
            return result;
        }
        List<String> cache = new ArrayList<>();
        helper(result, cache, 0, s);
        return result;
    }
    
    private void helper(List<String> result, List<String> cache, int startIndex, String s) {
        if (cache.size() == 4) {
            if (startIndex != s.length()) {
                return;
            }
            StringBuilder sb = new StringBuilder();
            for (String part : cache) {
                sb.append(part);
                sb.append(".");
            }
            sb.deleteCharAt(sb.length() - 1);
            result.add(sb.toString());
            return;
        }
        for (int i = startIndex; i < s.length() && i < startIndex + 3; i++) {
            String sub = s.substring(startIndex, i + 1);
            if (isValid(sub)) {
                cache.add(sub);
                helper(result, cache, i + 1, s);
                cache.remove(cache.size() - 1);
            }
        }
    }
    
    private boolean isValid(String s) {
        if (s.charAt(0) == '0') {
            return s.equals("0");
        }
        int num = Integer.valueOf(s);
        return num >= 0 && num <= 255;
    }
}
