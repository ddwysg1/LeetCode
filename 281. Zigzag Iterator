Link: https://leetcode.com/problems/zigzag-iterator/description/
public class ZigzagIterator {
    boolean vectorOne, full1, full2;
    int i, j;
    List<Integer> l1, l2;
    
    public ZigzagIterator(List<Integer> v1, List<Integer> v2) {
        if (v1 == null || v1.size() == 0) {
            full1 = true;
        } else {
            vectorOne = true;
        }
        
        if (v2 == null || v2.size() == 0) {
            full2 = true;
        }

        i = 0;
        j = 0;
        l1 = v1;
        l2 = v2;
    }

    public int next() {
        if (vectorOne) {
            int temp = l1.get(i);
            if (i == l1.size() - 1) {
                full1 = true;
            } else {
                i++;   
            }
            if (!full2) {
                vectorOne = !vectorOne;
            }
            return temp;
        } else {
            int temp = l2.get(j);
            if (j == l2.size() - 1) {
                full2 = true;
            } else {
                j++;   
            }
            if (!full1) {
                vectorOne = !vectorOne;
            }
            return temp;
        }
    }

    public boolean hasNext() {
        return !full1 || !full2;
    }
}

/**
 * Your ZigzagIterator object will be instantiated and called as such:
 * ZigzagIterator i = new ZigzagIterator(v1, v2);
 * while (i.hasNext()) v[f()] = i.next();
 */
