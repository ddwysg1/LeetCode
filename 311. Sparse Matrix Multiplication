Link: https://leetcode.com/problems/sparse-matrix-multiplication/description/
class Solution {
    public int[][] multiply(int[][] A, int[][] B) {
        if (A == null || B == null) {
            return new int[0][0];
        }
        if (A.length == 0 || B.length == 0) {
            return new int[0][0];
        }
        if (A[0] == null || B[0] == null) {
            return new int[0][0];
        }
        if (A[0].length == 0 || B[0].length == 0) {
            return new int[0][0];
        }
        
        int r1 = A.length;
        int c = A[0].length;
        int c2 = B[0].length;
        int[][] C = new int[r1][c2];
        for (int i = 0; i < r1; i++) {
            for (int k = 0; k < c; k++) {
                if (A[i][k] != 0) {
                    for (int j = 0; j < c2; j++) {
                        if (B[k][j] != 0) {
                            C[i][j] += A[i][k] * B[k][j];
                        }
                    }
                }
            }
        }
        return C;
    }
}
