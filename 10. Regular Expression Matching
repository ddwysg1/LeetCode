Link: https://leetcode.com/problems/regular-expression-matching/description/
class Solution {
    public boolean isMatch(String s, String p) {
        char[] A = s.toCharArray();
        char[] B = p.toCharArray();
        int m = A.length;
        int n = B.length;
        boolean[][] f = new boolean[m + 1][n + 1];
        for (int i = 0; i <= m; i++) {
            for (int j = 0; j <= n; j++) {
                if (i == 0 && j == 0) {
                    f[i][j] = true;
                    continue;
                }
                if (j == 0) {
                    f[i][j] = false;
                    continue;
                }
                if (i == 0) {
                    if (B[j - 1] == '*') {
                        f[i][j] = f[i][j - 2];
                    }
                    continue;
                }
                if (B[j - 1] != '*') {
                    if (B[j - 1] == A[i - 1] || B[j - 1] == '.') {
                        f[i][j] = f[i - 1][j - 1];
                    }
                } else {
                    if (j > 1) {
                        if (B[j - 2] == A[i - 1] || B[j - 2] == '.') {
                            f[i][j] |= f[i - 1][j];
                        }
                        f[i][j] |= f[i][j - 2];
                    }
                }
            }
        }
        return f[m][n];
    }
}
