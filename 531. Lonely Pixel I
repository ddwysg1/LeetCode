Link: https://leetcode.com/problems/lonely-pixel-i/description/
class Solution {
    public int findLonelyPixel(char[][] picture) {
        if (picture == null || picture.length == 0) {
            return 0;
        }
        if (picture[0] == null || picture[0].length == 0) {
            return 0;
        }
        int m = picture.length;
        int n = picture[0].length;
        int rowCount = 0;
        int col = 0;
        int result = 0;
        for(int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (picture[i][j] == 'B') {
                    col = j;
                    rowCount++;
                }
            }
            if (rowCount == 1) {
                if (isColLonely(picture, col)) {
                    result++;
                }    
            }
            rowCount = 0;
        }
        return result;
    }
    
    private boolean isColLonely(char[][] picture, int col) {
        int count = 0;
        for(int i = 0; i < picture.length; i++) {
            if (picture[i][col] == 'B') {
                count++;
            }
        }
        if (count == 1) {
            return true;
        }
        return false;
    }
}
