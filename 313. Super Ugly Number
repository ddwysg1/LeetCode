Link: https://leetcode.com/problems/super-ugly-number/description/
class Solution {
    public int nthSuperUglyNumber(int n, int[] primes) {
        if (n == 1) {
            return 1;
        }
        List<Integer> list = new ArrayList<>();
        int[] pointers = new int[primes.length];
        list.add(1);
        for (int i = 1; i < n; i++) {
            int lastNumber = list.get(i - 1);
            int min = Integer.MAX_VALUE;
            for (int j = 0; j < primes.length; j++) {
                while (list.get(pointers[j]) * primes[j] <= lastNumber) {
                    pointers[j]++;
                }
                min = Math.min(list.get(pointers[j]) * primes[j], min);
            }
            list.add(min);
        }
        return list.get(n - 1);
    }
}
