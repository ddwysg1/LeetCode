Link: https://leetcode.com/problems/arranging-coins/description/
class Solution {
    public int arrangeCoins(int n) {
        long start = 1;
        long end = (long) Math.sqrt(n) * 2;
        while(start + 1 < end) {
            long mid = start + (end - start) / 2;
            if (sum(mid) == (long) n) {
                return (int) mid;
            } else if (sum(mid) < (long) n) {
                start = mid;
            } else {
                end = mid;
            }
        }
        if (sum(start) <= n && sum(end) > n) {
            return (int) start;
        } else {
            return (int) end;
        }
    }
    
    private long sum(long n) {
        return n * (n + 1) / 2;
    }
}
