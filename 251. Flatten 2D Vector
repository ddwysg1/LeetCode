Link: https://leetcode.com/problems/flatten-2d-vector/description/
public class Vector2D implements Iterator<Integer> {
    int m,n;
    List<List<Integer>> list;
    int ridx, cidx;
    int count, total;
    
    public Vector2D(List<List<Integer>> vec2d) {
        list = vec2d;
        m = list.size();
        total = 0;
        for (int i = 0; i < m; i++) {
            total += list.get(i).size();
        }
        ridx = 0;
        cidx = 0;
    }

    @Override
    public Integer next() {
        while (list.get(ridx).size() == 0 && ridx < m - 1) {
            ridx++;
        }
        Integer res = list.get(ridx).get(cidx);
        if (cidx == list.get(ridx).size() - 1) {
            cidx = 0;
            ridx++;
        } else {
            cidx++;
        }
        count++;
        return res;
    }

    @Override
    public boolean hasNext() {
        if (count < total) {
            return true;
        } else {
            return false;
        }
    }
}

/**
 * Your Vector2D object will be instantiated and called as such:
 * Vector2D i = new Vector2D(vec2d);
 * while (i.hasNext()) v[f()] = i.next();
 */
