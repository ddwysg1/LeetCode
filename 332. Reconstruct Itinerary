Link: https://leetcode.com/problems/reconstruct-itinerary/description/
class Solution {
    public List<String> findItinerary(String[][] tickets) {
        List<String> result = new ArrayList<>();
        if (tickets == null || tickets.length == 0 || tickets[0].length == 0) {
            return result;
        }
        Map<String, PriorityQueue<String>> map = new HashMap<>();
        for (int i = 0; i < tickets.length; i++) {
            if (!map.containsKey(tickets[i][0])) {
                map.put(tickets[i][0], new PriorityQueue<String>());
            }
            map.get(tickets[i][0]).add(tickets[i][1]);
        }
        helper(result, "JFK", map);
        Collections.reverse(result);
        return result;
    }
    
    private void helper(List<String> result, 
                        String target, 
                        Map<String, PriorityQueue<String>> map) {
        while(map.containsKey(target) && !map.get(target).isEmpty()) {
            helper(result, map.get(target).poll(), map);
        }
        result.add(target);
    }
}
