Link: https://leetcode.com/problems/count-complete-tree-nodes/description/
**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int countNodes(TreeNode root) {
        if (root == null) {
            return 0;
        }
        if (root.left == null) {
            return 1;
        }
        int height = 0;
        int nodeSum = 0;
        TreeNode node = root;
        while(node.left != null) {
            nodeSum += 1 << height;
            height++;
            node = node.left;
        }
        return nodeSum + lastLevel(root, height);
    }
    
    private int lastLevel(TreeNode root, int height) {
        if (height == 1) {
            if (root.right != null) {
                return 2;
            } else if (root.left != null) {
                return 1;
            } else {
                return 0;
            }
        }
        TreeNode mid = root.left;
        int midHeight = 1;
        while(midHeight < height) {
            midHeight++;
            mid = mid.right;
        }
        if (mid == null) {
            return lastLevel(root.left, height - 1);
        } else {
            return (1 << (height - 1)) + lastLevel(root.right, height - 1);
        }
    }
}
