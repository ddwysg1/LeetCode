Link: https://leetcode.com/problems/paint-house-ii/description/
class Solution {
    public int minCostII(int[][] costs) {
        if (costs == null || costs.length == 0 || costs[0].length == 0) {
            return 0;
        }
        int n = costs.length;
        int k = costs[0].length;
        int[][] res = new int[n][k];
        for (int i = 0; i < k; i++) {
            res[0][i] = costs[0][i];
        }
        for (int i = 1; i < n; i++) {
            for (int j = 0; j < k; j++) {
                res[i][j] = getMin(res, i - 1, j) + costs[i][j];
            }
        }
        int cost = Integer.MAX_VALUE;
        for (int i = 0; i < k; i++) {
            cost = Math.min(cost, res[n - 1][i]);
        }
        return cost;
    }
    
    private int getMin(int[][] res, int preHouse, int color) {
        int cost = Integer.MAX_VALUE;
        for (int i = 0; i < res[0].length; i++) {
            if (i == color) {
                continue;
            }
            cost = Math.min(cost, res[preHouse][i]);
        }
        return cost;
    }
}
