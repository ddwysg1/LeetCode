Link: https://leetcode.com/problems/spiral-matrix-ii/description/
class Coor{
    int x;
    int y;
    public Coor(int x, int y) {
        this.x = x;
        this.y = y;
    }
}

public class Solution {
    public int[][] generateMatrix(int n) {
        if (n == 0) {
            return new int[0][0];
        }
        int[][] res = new int[n][n];
        boolean[][] visited = new boolean[n][n]; 
        int direction = 0;
        //0 - right; 1 - down; 2 - left; 3 - up;
        int count = 1;
        Coor pos = new Coor(0, 0);
        res[0][0] = count;
        visited[0][0] = true;
        count++;
        while (count <= n * n) {            
            if (direction == 0) {
                if (pos.y == n - 1 || (pos.y < n - 1 && visited[pos.x][pos.y + 1])) {
                    direction = 1;
                    continue;
                }
                pos.y += 1;
                res[pos.x][pos.y] = count;
                visited[pos.x][pos.y] = true;
                count++;
            } else if (direction == 1) {
                if (pos.x == n - 1 || (pos.x < n - 1 && visited[pos.x + 1][pos.y])) {
                    direction = 2;
                    continue;
                }
                pos.x += 1;
                res[pos.x][pos.y] = count;
                visited[pos.x][pos.y] = true;
                count++;
            } else if (direction == 2) {
                if ((pos.x == n - 1 && pos.y == 0) || pos.y >= 1 && visited[pos.x][pos.y - 1]) {
                    direction = 3;
                    continue;
                }
                pos.y -= 1;
                res[pos.x][pos.y] = count;
                visited[pos.x][pos.y] = true;
                count++;
            } else if (direction == 3) {
                if (pos.x >= 1 && visited[pos.x - 1][pos.y]) {
                    direction = 0;
                    continue;
                }
                pos.x -= 1;
                res[pos.x][pos.y] = count;
                visited[pos.x][pos.y] = true;
                count++;
            }
        }
        return res;
    }
}
